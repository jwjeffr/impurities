# some default settings
echo log
units metal
newton on
boundary p p p
atom_style atomic
neighbor 1.0 bin
neigh_modify every 1 delay 5 check yes
thermo 100

variable temperature equal 600
variable nsteps equal 1000000
variable nframes equal 50

# get number of types, not aware of a way to do this with LAMMPS natively

shell ./get_num_types.py inputs/${tag}/masses.in > atom_types_count_${tag}
variable ntypes file atom_types_count_${tag}
shell rm atom_types_count_${tag}

if "${tag} == FeAl" then &
   "variable nswaps equal 25" & 
elif "${tag} == cantor" &
   "variable nswaps equal 5"

# initialize lattice from inputs folder
include inputs/${tag}/lattice.in
create_box ${ntypes} box
create_atoms 1 box

# initialize some more properties from input folder
include inputs/${tag}/masses.in
include inputs/${tag}/potential.in
include inputs/${tag}/composition.in

# relax lattice at 0 K and 0 bar
min_style cg
min_modify dmax 1.0e-2 line quadratic
fix min all box/relax iso 0.0 vmax 0.01
minimize 0.0 1.0e-4 10000 10000
unfix min

# nvt equilibration
reset_timestep 0
# fix thermostat all langevin ${temperature} ${temperature} 1.0 123456 gjf vhalf
# fix nve_fix all nve
fix thermo_baro_stat all npt temp ${temperature} ${temperature} $(100.0 * dt) iso 1.0 1.0 $(1000.0 * dt)
fix recenter_fix all recenter INIT INIT INIT
dump equilibration all atom 1000 mc_data/${tag}/equil.dump
run 10000
undump equilibration

# run mc-md routine
reset_timestep 0

# do a swap_fix for every atom-atom pair

label fixing_outer_loop
variable i loop ${ntypes}

   variable jstart equal ${i}+1
   if "${jstart} > ${ntypes}" then "jump SELF fixing_loop_end"
   label fixing_inner_loop
   variable j loop ${jstart} ${ntypes}

      fix swap_fix${i}${j} all atom/swap 1000 ${nswaps} 123456 ${temperature} types ${i} ${j}

      next j
      jump SELF fixing_inner_loop

   next i
   jump SELF fixing_outer_loop
label fixing_loop_end

# dump and write restart files

variable r equal logfreq3(10,${nframes},${nsteps})

dump mc_dump all atom 1 mc_data/${tag}/mc.dump
dump_modify mc_dump every v_r
restart v_r mc_data/${tag}/mc.*.restart
run ${nsteps}
